*lsp-complete.txt*	LSP Source for Vimcomplete Plugin

Author: Girish Palya (girishji AT gmail DOT com)
For Vim version 9.0 and above

==============================================================================
CONTENTS 					*lsp-complete-contents*

     1. Overview ................................. |lsp-complete-overview|
     2. Requirements ............................. |lsp-complete-requirements|
     3. Installation ............................. |lsp-complete-installation|
     4. Configuration............................. |lsp-complete-configuration|

==============================================================================
1. Overview				*lsp-complete-overview*

This plugin extension sources autocompletion items from LSP
(https://github.com/yegappan/lsp) for Vimcomplete
(https://github.com/girishji/vimcomplete) autocompletion plugin
(|vimcomplete.txt|).

Install LSP before installing this plugin.

==============================================================================
2. Requirements				*lsp-complete-requirements*

- Vim >= 9.0
- Vimcomplete (|vimcomplete.txt|)
- LSP Client (https://github.com/yegappan/lsp)

==============================================================================
3. Installation				*lsp-complete-installation*

Note: Install this plugin after installing Vimcomplete and LSP.

Install using vim-plug (https://github.com/junegunn/vim-plug)

>
	vim9script
	plug#begin()
	Plug 'girishji/lsp-complete.vim'
	plug#end()

Legacy script:

>
	call plug#begin()
	Plug 'girishji/lsp-complete.vim'
	call plug#end()

Or use Vim's builtin package manager.

==============================================================================
4. Configuration				*lsp-complete-configuration*

Default options are as follows.
>
	vim9script
	export var options: dict<any> = {
	    enable: true,    # 'false' to disable this extension
	    priority: 8,     # Higher priority items are shown at the top
	    maxCount: 10,    # Maximum number of items shown
	    dup: true,       # `true` allows duplicate completion words
	    keywordOnly: false, # 'false' will complete after '.' in 'builtins.'
	}

Options can be modified using `g:VimCompleteOptionsSet()`. It takes a dictionary
argument. If you are using vim-plug, call this function through |VimEnter|
autocommand event.
>
	autocmd VimEnter * g:VimCompleteOptionsSet(options)

==============================================================================

vim:tw=78:ts=8:noet:ft=help:norl:
